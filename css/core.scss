@import "config";
@import "utils";

body {
    background: $bg;
    margin: 0;
    padding: 0;
    overflow: hidden;
    font: $font_general;
}

a {
    font-weight: inherit;
    color: $link_fg;
}

.moka-widget {
    @include transitions("opacity .2s ease-in-out, background-color .2s ease-in-out, color .2s ease-in-out");
    z-index: inherit;
}

.moka-widgetlist-item.moka-current, .moka-view.moka-current > .moka-widget {
    color: $widget_current_fg;
    background-color: $widget_current_bg;
}

input, textarea, .moka-tabs, .moka-input, .moka-close, .moka-title {outline: 0}

.moka-window .moka-title, .moka-tab, .moka-widgetlist-item, .moka-button, .moka-imageview {
    &.moka-focus {
        color: $widget_selected_fg;
        background-color: $widget_selected_bg;
    }
}
// hover
.moka-window .moka-title, .moka-tab, .moka-widgetlist-item, .moka-button, .moka-imageviewer {
    &:hover {
        color: $widget_hover_fg;
        background-color: $widget_hover_bg;
    }
}

// Moka.Label
.moka-focus .moka-keyhint {
    text-decoration: underline;
}
.moka-label {
    color: transparentize($widget_fg, 0.2);
    padding: 0.3em 0.3em;
    @include inset-text();
}
.moka-current.moka-label {
    color: $widget_current_fg;
    @include inset-text($widget_current_fg);
}
.moka-focus.moka-label {
    color: $widget_selected_fg;
    @include inset-text($widget_selected_fg);
}

// Moka.Container
.moka-container {
    &.moka-vertical > .moka-widget{
        display: block;
    }
    &.moka-horizontal > .moka-widget{
        display: inline-block;
    }
}

// Moka.WidgetList
.moka-widgetlist {
    margin: auto;
    padding: 0.2em;
    text-align: left;
}
.moka-widgetlist-item {
    padding-top: 0.2em;
    padding-bottom: 0.2em;
    margin: 0.3em;
    @include rounded($item_radius);

    &:nth-child(even) {
        background-color: $widget_bg*1.05;
    }
}
.moka-widgetlist-item, .moka-tab {
    &.moka-current {
        background-color: $widget_current_bg;
    }
    &.moka-focus {
        background-color: $widget_selected_bg;
    }
    &:hover {
        background-color: $widget_hover_bg;
    }
}

// Moka.ButtonBox
.moka-buttonbox {
    width: 95%;
    text-align: right;
    .moka-buttonbox-item {
        &.moka-first {
            @include rounded($buttonbox_radius, top, left);
            @include rounded($buttonbox_radius, bottom, left);
        }
        &.moka-last {
            @include rounded($buttonbox_radius, top, right);
            @include rounded($buttonbox_radius, bottom, right);
        }
    }
}
.moka-button.moka-label {
    padding: 0.15em 0.4em;
    @include inset-text()
}

// Moka.Button
.moka-button {
    cursor: pointer;
    display: inline-block;
    text-align: center;
    margin: 6px 2px;

    border: 1px solid $widget_bg*0.6;

    @include rounded($button_radius);

    @include box-shadow(inset 0 0 10px transparentize($widget_bg*1.5, 0.3));

    @include linear-gradient(-90,
        ($widget_bg*1.1) +","+
        ($widget_bg) +","+
        ($widget_bg*0.8)
    );

    &:hover {
        color: $button_hover_fg;
        @include box-shadow(inset 0 0 10px $button_hover_bg);
    }
    &.moka-focus {
        &.moka-label {
            color: $button_selected_fg;
            @include inset-text($button_selected_fg);
        }
        background-color: $button_selected_bg;
        //@include box-shadow(inset 0 0 10px $button_selected_bg);
        @include linear-gradient(-90,
            ($button_selected_bg*1.1) +","+
            ($button_selected_bg) +","+
            ($button_selected_bg*0.8)
        );
    }
}

// Moka.TextEdit
.moka-textedit textarea {
    vertical-align: top;
}

// Moka.LineEdit
.moka-lineedit input, .moka-textedit textarea, .moka-combo select {
    color: $edit_fg;
    background-color: $edit_bg;
    border-color: $widget_bg * 1.6;
    text-shadow: white 0 0 0;
    min-width: 4em;

    font: $font_edit;
    margin: 0.2em 0.5em;

    @include inset();

    &.moka-focus {
        color: $edit_focused_fg;
        background-color: $edit_focused_bg;
        text-shadow: black 0 0 0;
    }
}

// Moka.Tabs
.moka-tabs {
    padding-bottom: 0;
    padding-right: 0;
    .moka-tabs-container {
        .moka-tab {
            @include rounded($tab_radius);
            //border: 1px solid $widget_bg*0.7;
            border: $tab_border;
            .moka-focus {
                color: $widget_selected_fg;
                background-color: $widget_selected_bg;
            }
        }
        &.moka-horizontal {
            > .moka-tab {
                border-bottom: 0;
                vertical-align: top;

                /* don't put tab on multiple lines */
                display: inline-block;
                white-space: nowrap;

                padding: 0.1em 0.3em;
                margin: $tab_pull 0.5em 0 0.5em;

                @include rounded(0, bottom, left);
                @include rounded(0, bottom, right);
                @include box-shadow(0 -2px 4px transparentize($widget_bg*0.4, 0.7));

                padding-bottom: 0.4em;

                &:hover, &.moka-current {
                    margin-top: 0;
                    padding-bottom: 0.4em+$tab_pull;
                }
            }
        }
        &.moka-vertical {
            > .moka-tab {
                border-right:0;
                display: block;

                margin: 0.1em 0 1em $tab_pull;

                @include rounded(0, top, right);
                @include rounded(0, bottom, right);
                @include box-shadow(-2px 0 4px transparentize($widget_bg*0.4, 0.6));

                padding: 0.3em;
                padding-right: 0.4em;

                &:hover, &.moka-current {
                    margin-left: 0;
                    padding-right: 0.4em + $tab_pull;
                }
            }
        }
    }
}
.moka-pages {
    border: $tab_border;
    vertical-align: top;
}

// Moka.Viewer
.moka-viewer {
    height: 100%;
    width: 100%;
    @if $viewer_scrollbars {
        overflow: scroll;
    } @else {
        overflow: hidden;
    }
}
.moka-viewer .moka-table {
    margin: auto;
    height: 100%;
    width: 100%;
    border-collapse: collapse;
    background: $bg;
}
.moka-view > .moka-widget {
    margin: auto;
}
.moka-viewer:not(.moka-layout-1x1) .moka-view {
    padding: $view_padding;
    &.moka-current > .moka-widget {
        outline: $view_padding solid $view_selected_bg;
        // FIXME: missing bottom part of outline in Firefox
        img {margin-bottom:-$view_padding;}
    }
}
.moka-viewer.moka-layout-1x1 .moka-view {
    padding: 0;
}
// book layout
.moka-viewer.moka-layout-2x1 .moka-table {
    width: auto;
    margin: auto;
    & .moka-view {
        padding-left: 0;
        padding-right: 0;
    }
}

// Moka.Window
.moka-window {
    padding: 0;
    border: 1px solid black;
    opacity: $window_opacity;

	z-index: $window_layer; /* on top */

    position: absolute;

    background-color: $widget_bg;
    @include outset();
    @include rounded($window_radius);
    .moka-body {
        overflow: auto;
    }
    .moka-title, .moka-body {
        margin: $window_border;
    }
    .moka-title {
        font: $font_header;
        padding: 0.1em 0.5em;
        text-align: center;

        color: $title_fg;
        background-color: $title_bg;
        //@include rounded($title_radius);
        @include rounded($window_radius - $window_border, top, left);
        @include rounded($window_radius - $window_border, top, right);
        @include inset();

        .moka-label {
            color: $title_fg;
            display: inline;
            text-shadow: transparent 0 0 0;
        }
    }
    // focused window on top
    &.top_window {opacity: $top_window_opacity;}
    &.moka-focus {opacity: $focused_window_opacity;}
    &.moka-focus {
        z-index: $top_window_layer;
        .moka-title {
            color: $title_selected_fg;
            .moka-label {
                color: $title_selected_fg;
            }
            background-color: $title_selected_bg;
            &:focus {
                color: $title_focused_fg;
                .moka-label {
                    color: $title_focused_fg;
                }
                background-color: $title_focused_bg;
            }
        }
    }
    &:hover {
        opacity: $focused_window_opacity;
    }
    // button characters at: http://www.utf8-chartable.de/unicode-utf8-table.pl
    .moka-window-button {
        @if $window_buttons_right {
            float: right;
        } @else {
            float: left;
        }
        opacity: 0.6;
        display:inline;
        &:hover, &:focus {
            opacity: 1;
            color: white;
            text-shadow: #ddd 0 0 7px;
        }
    }
    .moka-close {
        &:before {
          content: '\2297';
          //content: '\22A0';
        }
    }
    .moka-maximize {
        &:before {
          content: '\2299';
          //content: '\22A1';
        }
    }
}

// Moka.Notification
#moka-notification-layer {
    position: fixed;
    z-index: $notification_layer;
    @if $notification_x == right {
        right: 0;
    } @else {
        left: 0;
    }
    @if $notification_y == bottom {
        bottom: 0;
    } @else {
        top: 0;
    }
}
.moka-notification {
    margin: 0.5em;
    white-space: nowrap;

    //text-shadow: $notification_bg*0.8 1px 1px 1px;

    color: $notification_fg;
    background-color: $notification_bg;
    padding: 0.5em 1.5em;

    border: $notification_border;

    @include box-shadow(2px 2px 5px rgba(0,0,0,0.3));
    @include rounded($notification_radius);
    //@include transitions("opacity 0.5s ease-in-out, background-color 1.5s ease-in-out");

    opacity: $notification_opacity;
    &:hover {opacity:1}
}

// widget searching
.moka-found {
    outline: $found_outline;
}

